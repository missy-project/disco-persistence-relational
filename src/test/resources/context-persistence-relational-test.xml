<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"

	default-lazy-init="true">

	<bean id="hibernatePersistenceStrategy" class="org.gesis.persistence.relational.HibernatePersistenceStrategy" scope="singleton">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<jdbc:embedded-database id="embeddedDataSource" />
	
	<!-- is responsible to deliver session objects for hibernate. should be used in a class that
		actually persists the java objects, e.g. a specific DAO object. 
		we let spring manage the session factory and instantiate the AnnotationSessionFactory-bean.
		otherwise we would have had to instantiate the Configuration-class be our own.
		-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="embeddedDataSource" />
		
		<property name="annotatedClasses">
			<list>
				<value>org.gesis.adms.Identifier</value>
				
				<value>org.gesis.dcterms.LicenseDocument</value>
				<value>org.gesis.dcterms.Location</value>
				<value>org.gesis.dcterms.MediaTypeOrExtend</value>
				<value>org.gesis.dcterms.PeriodOfTime</value>
				<value>org.gesis.dcterms.ProvenanceStatement</value>
				
				<value>org.gesis.datacube.DataSet</value>
				
				<value>org.gesis.foaf.Agent</value>
				<value>org.gesis.foaf.Document</value>
				
				<value>org.gesis.rdf.LangString</value>
				<value>org.gesis.rdf.List</value>

				<value>org.gesis.rdfs.Datatype</value>
				<value>org.gesis.rdfs.Resource</value>
				
				<value>org.gesis.skos.Concept</value>
				<value>org.gesis.skos.ConceptScheme</value>

				<value>org.gesis.discovery.AnalysisUnit</value>
				<value>org.gesis.discovery.CategoryStatistics</value>
				<value>org.gesis.discovery.DataFile</value>
				<value>org.gesis.discovery.DescriptiveStatistics</value>
				<value>org.gesis.discovery.Instrument</value>
				<value>org.gesis.discovery.LogicalDataSet</value>
				<value>org.gesis.discovery.Question</value>
				<value>org.gesis.discovery.Questionnaire</value>
				<value>org.gesis.discovery.Representation</value>
				<value>org.gesis.discovery.SummaryStatistics</value>
				<value>org.gesis.discovery.Study</value>
				<value>org.gesis.discovery.StudyGroup</value>
				<value>org.gesis.discovery.Universe</value>
				<value>org.gesis.discovery.Variable</value>
				<value>org.gesis.discovery.VariableDefinition</value>
			</list>
		</property>
		 
		<property name="hibernateProperties">
		    <props>
				<prop key="hibernate.connection.driver_class">org.hsqldb.jdbcDriver</prop>
				<prop key="hibernate.connection.url">jdbc:hsqldb:mem:;shutdown=false</prop>
				<prop key="hibernate.connection.userkey">sa</prop>
				<prop key="hibernate.connection.password"/>
				<prop key="hibernate.connection.pool_size">10</prop>
				<prop key="hibernate.connection.autocommit">true</prop>

				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop> 

				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
		        <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
		    </props>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>


